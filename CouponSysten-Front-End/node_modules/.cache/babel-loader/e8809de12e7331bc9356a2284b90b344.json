{"ast":null,"code":"var _jsxFileName = \"/Users/eden_bachner/Full stack java/Final Project/\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D1spring/CouponSystemProject/src/app/components/SignUp.js\";\nimport React, { Component } from 'react';\nimport AppNavbar from './AppNavbar';\nimport { Container } from 'reactstrap';\nimport { Button, Form, FormGroup, Input, Label, Row, Col } from \"reactstrap\";\nimport { Alert } from \"react-bootstrap\";\nimport Authentication from '../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'firstname':\n          errors.firstname = value.length < 3 ? 'FirstName must be 3 characters long!' : '';\n          break;\n\n        case 'lastname':\n          errors.lastname = value.length < 3 ? 'LastName must be 3 characters long!' : '';\n          break;\n\n        case 'username':\n          errors.username = value.length < 5 ? 'Username must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      });\n    };\n\n    this.signUp = e => {\n      e.preventDefault();\n      const valid = validateForm(this.state.errors);\n      this.setState({\n        validForm: valid\n      });\n\n      if (valid) {\n        Authentication.register(this.state.firstname, this.state.lastname, this.state.username, this.state.email, this.state.password).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          console.log(\"Fail! Error = \" + error.toString());\n          this.setState({\n            successful: false,\n            message: error.toString()\n          });\n        });\n      }\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      message: \"\",\n      successful: false,\n      validForm: true,\n      errors: {\n        firstname: '',\n        lastname: '',\n        username: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    const title = /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }, this);\n\n    const errors = this.state.errors;\n    let alert = \"\";\n\n    if (this.state.message) {\n      if (this.state.successful) {\n        alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this);\n      } else {\n        alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"12\",\n            md: {\n              size: 4,\n              offset: 4\n            },\n            children: [title, /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.signUp,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                controlId: \"forFirstname\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"firstname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  placeholder: \"Enter First Name\",\n                  name: \"firstname\",\n                  id: \"firstname\",\n                  value: this.state.firstname,\n                  autoComplete: \"firstname\",\n                  onChange: this.changeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, this), errors.firstname && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  children: errors.firstname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                controlId: \"forLastname\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"lastname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  placeholder: \"Enter Last Name\",\n                  name: \"lastname\",\n                  id: \"lastname\",\n                  value: this.state.lastname,\n                  autoComplete: \"lastname\",\n                  onChange: this.changeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 17\n                }, this), errors.lastname && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  children: errors.firstname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                controlId: \"forUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  placeholder: \"Enter UserName\",\n                  name: \"username\",\n                  id: \"username\",\n                  value: this.state.username,\n                  autoComplete: \"username\",\n                  onChange: this.changeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }, this), errors.username && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                controlId: \"formEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  required: true,\n                  type: \"text\",\n                  placeholder: \"Enter Email\",\n                  name: \"email\",\n                  id: \"email\",\n                  value: this.state.email,\n                  autoComplete: \"email\",\n                  onChange: this.changeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                controlId: \"formPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  required: true,\n                  type: \"password\",\n                  placeholder: \"Enter Password\",\n                  name: \"password\",\n                  id: \"password\",\n                  value: this.state.password,\n                  autoComplete: \"password\",\n                  onChange: this.changeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  children: errors.password\n                }, \"errorspassword\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 15\n              }, this), !this.state.validForm && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: \"Please check the inputs again!\"\n              }, \"validForm\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), alert]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/eden_bachner/Full stack java/Final Project/פרויקט גמר בspring/CouponSystemProject/src/app/components/SignUp.js"],"names":["React","Component","AppNavbar","Container","Button","Form","FormGroup","Input","Label","Row","Col","Alert","Authentication","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","SignUp","constructor","props","changeHandler","event","name","value","target","state","firstname","lastname","username","email","test","password","setState","console","log","signUp","e","preventDefault","validForm","register","then","response","message","data","successful","error","toString","render","title","alert","size","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,GAAhD,EAAqDC,GAArD,QAAgE,YAAhE;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,cAAP,MAA2B,mCAA3B;;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAAC,wHAAD,CAA9B;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,MAAd,EAAsBI,OAAtB,CACGC,GAAD,IAASA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B,CADX;AAGA,SAAOA,KAAP;AACD,CAND;;AAQA,MAAMM,MAAN,SAAqBtB,SAArB,CAA+B;AAE7BuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,aArBmB,GAqBFC,KAAD,IAAW;AACzB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA9B;AAEA,UAAId,MAAM,GAAG,KAAKe,KAAL,CAAWf,MAAxB;;AAEA,cAAQY,IAAR;AACE,aAAK,WAAL;AACEZ,UAAAA,MAAM,CAACgB,SAAP,GACEH,KAAK,CAACP,MAAN,GAAe,CAAf,GACI,sCADJ,GAEI,EAHN;AAIA;;AACF,aAAK,UAAL;AACEN,UAAAA,MAAM,CAACiB,QAAP,GACEJ,KAAK,CAACP,MAAN,GAAe,CAAf,GACI,qCADJ,GAEI,EAHN;AAIA;;AACF,aAAK,UAAL;AACEN,UAAAA,MAAM,CAACkB,QAAP,GACEL,KAAK,CAACP,MAAN,GAAe,CAAf,GACI,qCADJ,GAEI,EAHN;AAIA;;AACF,aAAK,OAAL;AACEN,UAAAA,MAAM,CAACmB,KAAP,GACEtB,eAAe,CAACuB,IAAhB,CAAqBP,KAArB,IACI,EADJ,GAEI,qBAHN;AAIA;;AACF,aAAK,UAAL;AACEb,UAAAA,MAAM,CAACqB,QAAP,GACER,KAAK,CAACP,MAAN,GAAe,CAAf,GACI,qCADJ,GAEI,EAHN;AAIA;;AACF;AACE;AAhCJ;;AAmCA,WAAKgB,QAAL,CAAc;AAACtB,QAAAA,MAAD;AAAS,SAACY,IAAD,GAAQC;AAAjB,OAAd,EAAuC,MAAK;AACxCU,QAAAA,OAAO,CAACC,GAAR,CAAYxB,MAAZ;AACH,OAFD;AAGD,KAhEkB;;AAAA,SAkEnByB,MAlEmB,GAkETC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM1B,KAAK,GAAGF,YAAY,CAAC,KAAKgB,KAAL,CAAWf,MAAZ,CAA1B;AACA,WAAKsB,QAAL,CAAc;AAACM,QAAAA,SAAS,EAAE3B;AAAZ,OAAd;;AACA,UAAGA,KAAH,EAAS;AACPL,QAAAA,cAAc,CAACiC,QAAf,CACE,KAAKd,KAAL,CAAWC,SADb,EAEE,KAAKD,KAAL,CAAWE,QAFb,EAGE,KAAKF,KAAL,CAAWG,QAHb,EAIE,KAAKH,KAAL,CAAWI,KAJb,EAKE,KAAKJ,KAAL,CAAWM,QALb,EAMES,IANF,CAOEC,QAAQ,IAAI;AACV,eAAKT,QAAL,CAAc;AACZU,YAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcD,OADX;AAEZE,YAAAA,UAAU,EAAE;AAFA,WAAd;AAID,SAZH,EAaEC,KAAK,IAAI;AACPZ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBW,KAAK,CAACC,QAAN,EAA/B;AAEA,eAAKd,QAAL,CAAc;AACZY,YAAAA,UAAU,EAAE,KADA;AAEZF,YAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN;AAFG,WAAd;AAID,SApBH;AAsBD;AACF,KA9FkB;;AAEjB,SAAKrB,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXE,MAAAA,QAAQ,EAAE,EALC;AAMXW,MAAAA,OAAO,EAAE,EANE;AAOXE,MAAAA,UAAU,EAAE,KAPD;AAQXN,MAAAA,SAAS,EAAE,IARA;AASX5B,MAAAA,MAAM,EAAE;AACNgB,QAAAA,SAAS,EAAE,EADL;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNC,QAAAA,QAAQ,EAAE,EAHJ;AAINC,QAAAA,KAAK,EAAE,EAJD;AAKNE,QAAAA,QAAQ,EAAE;AALJ;AATG,KAAb;AAiBD;;AA6EDgB,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;;AACA,UAAMtC,MAAM,GAAG,KAAKe,KAAL,CAAWf,MAA1B;AAEA,QAAIuC,KAAK,GAAG,EAAZ;;AAEA,QAAG,KAAKxB,KAAL,CAAWiB,OAAd,EAAsB;AACpB,UAAG,KAAKjB,KAAL,CAAWmB,UAAd,EAAyB;AACvBK,QAAAA,KAAK,gBACK,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA,oBACG,KAAKxB,KAAL,CAAWiB;AADd;AAAA;AAAA;AAAA;AAAA,gBADV;AAKD,OAND,MAMK;AACHO,QAAAA,KAAK,gBACK,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,oBACG,KAAKxB,KAAL,CAAWiB;AADd;AAAA;AAAA;AAAA;AAAA,gBADV;AAKD;AACF;;AAED,wBACE;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,+BACE,QAAC,GAAD;AAAA,iCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAa,YAAA,EAAE,EAAE;AAAEQ,cAAAA,IAAI,EAAE,CAAR;AAAWC,cAAAA,MAAM,EAAE;AAAnB,aAAjB;AAAA,uBACCH,KADD,eAEE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAE,KAAKb,MAArB;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,cAArB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC,kBAFd;AAGE,kBAAA,IAAI,EAAC,WAHP;AAGmB,kBAAA,EAAE,EAAC,WAHtB;AAIE,kBAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,SAJpB;AAKE,kBAAA,YAAY,EAAC,WALf;AAME,kBAAA,QAAQ,EAAE,KAAKN;AANjB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWIV,MAAM,CAACgB,SAAP,iBACI,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAC,QAAf;AAAA,4BACGhB,MAAM,CAACgB;AADV;AAAA;AAAA;AAAA;AAAA,wBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAoBE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,aAArB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC,iBAFd;AAGE,kBAAA,IAAI,EAAC,UAHP;AAGkB,kBAAA,EAAE,EAAC,UAHrB;AAIE,kBAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,QAJpB;AAKE,kBAAA,YAAY,EAAC,UALf;AAME,kBAAA,QAAQ,EAAE,KAAKP;AANjB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWIV,MAAM,CAACiB,QAAP,iBACI,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAC,QAAf;AAAA,4BACGjB,MAAM,CAACgB;AADV;AAAA;AAAA;AAAA;AAAA,wBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eAuCE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,aAArB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC,gBAFd;AAGE,kBAAA,IAAI,EAAC,UAHP;AAGkB,kBAAA,EAAE,EAAC,UAHrB;AAIE,kBAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,QAJpB;AAKE,kBAAA,YAAY,EAAC,UALf;AAME,kBAAA,QAAQ,EAAE,KAAKR;AANjB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWIV,MAAM,CAACkB,QAAP,iBACI,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAC,QAAf;AAAA,4BACGlB,MAAM,CAACkB;AADV;AAAA;AAAA;AAAA;AAAA,wBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvCF,eA0DE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,WAArB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,QAAQ,MAAf;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,WAAW,EAAC,aAFd;AAGE,kBAAA,IAAI,EAAC,OAHP;AAGe,kBAAA,EAAE,EAAC,OAHlB;AAIE,kBAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAJpB;AAKE,kBAAA,YAAY,EAAC,OALf;AAME,kBAAA,QAAQ,EAAE,KAAKT;AANjB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWIV,MAAM,CAACmB,KAAP,iBACI,QAAC,KAAD;AAAO,kBAAA,OAAO,EAAC,QAAf;AAAA,4BACGnB,MAAM,CAACmB;AADV;AAAA;AAAA;AAAA;AAAA,wBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1DF,eA6EE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,cAArB;AAAA,wCACE,QAAC,KAAD;AAAO,kBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,QAAQ,MAAf;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,WAAW,EAAC,gBAFd;AAGE,kBAAA,IAAI,EAAC,UAHP;AAGkB,kBAAA,EAAE,EAAC,UAHrB;AAIE,kBAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,QAJpB;AAKE,kBAAA,YAAY,EAAC,UALf;AAME,kBAAA,QAAQ,EAAE,KAAKX;AANjB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWIV,MAAM,CAACqB,QAAP,iBACI,QAAC,KAAD;AAA4B,kBAAA,OAAO,EAAC,QAApC;AAAA,4BACGrB,MAAM,CAACqB;AADV,mBAAW,gBAAX;AAAA;AAAA;AAAA;AAAA,wBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7EF,eAgGE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,SAAhB;AAA0B,gBAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhGF,EAoGI,CAAC,KAAKN,KAAL,CAAWa,SAAZ,iBACE,QAAC,KAAD;AAAuB,gBAAA,OAAO,EAAC,QAA/B;AAAA;AAAA,iBAAW,WAAX;AAAA;AAAA;AAAA;AAAA,sBArGN,EA2GGW,KA3GH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwHD;;AAhP4B;;AAmP/B,eAAehC,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Container } from 'reactstrap';\r\nimport { Button, Form, FormGroup, Input, Label, Row, Col } from \"reactstrap\";\r\nimport { Alert } from \"react-bootstrap\"\r\n\r\nimport Authentication from '../services/AuthenticationService'\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach(\r\n    (val) => val.length > 0 && (valid = false)\r\n  );\r\n  return valid;\r\n}\r\n\r\nclass SignUp extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n      successful: false,\r\n      validForm: true,\r\n      errors: {\r\n        firstname: '',\r\n        lastname: '',\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n  \r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case 'firstname':\r\n        errors.firstname = \r\n          value.length < 3\r\n            ? 'FirstName must be 3 characters long!'\r\n            : '';\r\n        break;\r\n      case 'lastname':\r\n        errors.lastname = \r\n          value.length < 3\r\n            ? 'LastName must be 3 characters long!'\r\n            : '';\r\n        break;\r\n      case 'username':\r\n        errors.username = \r\n          value.length < 5\r\n            ? 'Username must be 5 characters long!'\r\n            : '';\r\n        break;\r\n      case 'email': \r\n        errors.email = \r\n          validEmailRegex.test(value)\r\n            ? ''\r\n            : 'Email is not valid!';\r\n        break;\r\n      case 'password': \r\n        errors.password = \r\n          value.length < 8\r\n            ? 'Password must be 8 characters long!'\r\n            : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  \r\n    this.setState({errors, [name]: value}, ()=> {\r\n        console.log(errors)\r\n    })  \r\n  }\r\n\r\n  signUp = (e) => {\r\n    e.preventDefault();\r\n    const valid = validateForm(this.state.errors);\r\n    this.setState({validForm: valid});\r\n    if(valid){\r\n      Authentication.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          console.log(\"Fail! Error = \" + error.toString());\r\n          \r\n          this.setState({\r\n            successful: false,\r\n            message: error.toString()\r\n          });\r\n        }\r\n      );  \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const title = <h2>Register User</h2>;\r\n    const errors = this.state.errors;\r\n\r\n    let alert = \"\";\r\n\r\n    if(this.state.message){\r\n      if(this.state.successful){\r\n        alert = (\r\n                  <Alert variant=\"success\">\r\n                    {this.state.message}\r\n                  </Alert>\r\n                );\r\n      }else{\r\n        alert = (\r\n                  <Alert variant=\"danger\">\r\n                    {this.state.message}\r\n                  </Alert>\r\n                );\r\n      }\r\n    }\r\n\r\n    return ( \r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <Row>\r\n          <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\r\n          {title}\r\n            <Form onSubmit={this.signUp}>\r\n              <FormGroup controlId=\"forFirstname\">\r\n                <Label for=\"firstname\">First Name</Label>\r\n                <Input\r\n                  type=\"text\" \r\n                  placeholder=\"Enter First Name\"\r\n                  name=\"firstname\" id=\"firstname\"\r\n                  value={this.state.firstname}\r\n                  autoComplete=\"firstname\"\r\n                  onChange={this.changeHandler}\r\n                />\r\n                {\r\n                  errors.firstname && ( \r\n                      <Alert variant=\"danger\">\r\n                        {errors.firstname}\r\n                      </Alert>\r\n                    )\r\n                }\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"forLastname\">\r\n                <Label for=\"lastname\">Last Name</Label>\r\n                <Input\r\n                  type=\"text\" \r\n                  placeholder=\"Enter Last Name\"\r\n                  name=\"lastname\" id=\"lastname\"\r\n                  value={this.state.lastname}\r\n                  autoComplete=\"lastname\"\r\n                  onChange={this.changeHandler}\r\n                />\r\n                {\r\n                  errors.lastname && ( \r\n                      <Alert variant=\"danger\">\r\n                        {errors.firstname}\r\n                      </Alert>\r\n                    )\r\n                }\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"forUsername\">\r\n                <Label for=\"username\">Username</Label>\r\n                <Input\r\n                  type=\"text\" \r\n                  placeholder=\"Enter UserName\"\r\n                  name=\"username\" id=\"username\"\r\n                  value={this.state.username}\r\n                  autoComplete=\"username\"\r\n                  onChange={this.changeHandler}\r\n                />\r\n                {\r\n                  errors.username && ( \r\n                      <Alert variant=\"danger\">\r\n                        {errors.username}\r\n                      </Alert>\r\n                    )\r\n                }\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"formEmail\">\r\n                <Label for=\"email\">Email</Label>\r\n                <Input required\r\n                  type=\"text\" \r\n                  placeholder=\"Enter Email\"\r\n                  name=\"email\" id=\"email\"\r\n                  value={this.state.email}\r\n                  autoComplete=\"email\"\r\n                  onChange={this.changeHandler}\r\n                />\r\n                {\r\n                  errors.email && ( \r\n                      <Alert variant=\"danger\">\r\n                        {errors.email}\r\n                      </Alert>\r\n                    )\r\n                }\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"formPassword\">\r\n                <Label for=\"password\">Password</Label>\r\n                <Input required \r\n                  type=\"password\" \r\n                  placeholder=\"Enter Password\"\r\n                  name=\"password\" id=\"password\"\r\n                  value={this.state.password}\r\n                  autoComplete=\"password\"\r\n                  onChange={this.changeHandler}\r\n                />\r\n                {\r\n                  errors.password && ( \r\n                      <Alert key=\"errorspassword\" variant=\"danger\">\r\n                        {errors.password}\r\n                      </Alert>\r\n                    )\r\n                }\r\n              </FormGroup>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Create\r\n              </Button>\r\n              {\r\n                !this.state.validForm && (\r\n                  <Alert key=\"validForm\" variant=\"danger\">\r\n                    Please check the inputs again!\r\n                  </Alert>\r\n                )\r\n              }\r\n\r\n              {alert}\r\n            </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}