{"ast":null,"code":"var _jsxFileName = \"/Users/eden_bachner/Full stack java/Final Project/\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D1spring/CouponSystemProject/src/App/Components/Login/Login.js\";\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport './login.css';\nimport history from '../history';\nimport * as Yup from \"yup\";\nimport AutenticationService from './../../../service/AutenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email format').required('Required'),\n  password: Yup.string().required('Required')\n});\nexport default function Login() {\n  const handleSubmit = (values, {\n    setFieldValue\n  }) => {\n    AutenticationService.login(values.email, values.password, values.type).then(() => {\n      switch (values.type) {\n        case \"ADMIN\":\n          history.push('/admin');\n          break;\n\n        case \"COMPANY\":\n          history.push('/company');\n          break;\n\n        case \"CUSTOMER\":\n          history.push('/customer');\n          break;\n\n        default:\n          break;\n      }\n    }, error => {\n      if (error.response) {\n        alert(error.response.data.string);\n        console.log(error.response);\n      } else alert(\"Server is down\");\n\n      setFieldValue('password', \"\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login-seperator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formik\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to the coupon system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\",\n          type: \"ADMIN\"\n        },\n        onSubmit: (values, {\n          setFieldValue\n        }) => handleSubmit(values, {\n          setFieldValue\n        }),\n        validationSchema: validationSchema,\n        children: ({\n          isValid,\n          dirty,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"control-label col-sm-2\",\n              children: \" Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              class: \"col-sm-2\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter Email\",\n              title: values.email,\n              required: true,\n              autocomplete: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"email\",\n            className: \"alert alert-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"control-label col-sm-2\",\n              children: \"  Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              class: \"col-sm-2\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter Password\",\n              required: true,\n              autocomplete: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"password\",\n            className: \"alert alert alert-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"control-label col-sm-2\",\n              children: \" Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              class: \"col-sm-2\",\n              component: \"select\",\n              name: \"type\",\n              title: values.type,\n              required: true,\n              autocomplete: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ADMIN\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"COMPANY\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CUSTOMER\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn btn-primary my-1\",\n            disabled: !(isValid && dirty),\n            title: \"Login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/eden_bachner/Full stack java/Final Project/פרויקט גמר בspring/CouponSystemProject/src/App/Components/Login/Login.js"],"names":["Field","Formik","Form","ErrorMessage","history","Yup","AutenticationService","validationSchema","object","email","string","required","password","Login","handleSubmit","values","setFieldValue","login","type","then","push","error","response","alert","data","console","log","isValid","dirty"],"mappings":"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","sourcesContent":["import { Field, Formik, Form, ErrorMessage } from 'formik'\r\nimport './login.css'\r\nimport history from '../history';\r\nimport * as Yup from \"yup\";\r\nimport AutenticationService from './../../../service/AutenticationService'\r\n\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email format').required('Required'),\r\n    password: Yup.string().required('Required')\r\n})\r\nexport default function Login() {\r\n    const handleSubmit = (values, { setFieldValue }) => {\r\n\r\n        AutenticationService\r\n            .login(\r\n                values.email,\r\n                values.password,\r\n                values.type\r\n            )\r\n            .then(() => {\r\n                switch (values.type) {\r\n                    case \"ADMIN\":\r\n                        history.push('/admin')\r\n                        break;\r\n                    case \"COMPANY\":\r\n                        history.push('/company')\r\n                        break;\r\n                    case \"CUSTOMER\":\r\n                        history.push('/customer')\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n                error => {\r\n                    if (error.response) {\r\n                        alert(error.response.data.string)\r\n                        console.log(error.response)\r\n                    }\r\n\r\n                    else\r\n                        alert(\"Server is down\")\r\n                    setFieldValue('password', \"\")\r\n                }\r\n            )\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"Login-seperator\"></div>\r\n            <div className=\"formik\">\r\n                <h2>Welcome to the coupon system</h2>\r\n\r\n                <Formik\r\n\r\n                    initialValues={{ email: \"\", password: \"\", type: \"ADMIN\" }}\r\n                    onSubmit={(values, { setFieldValue }) => handleSubmit(values, { setFieldValue })}\r\n                    validationSchema={validationSchema}\r\n                >\r\n                    {({ isValid, dirty, values }) => (\r\n                        <Form >\r\n                            <div class=\"form-group\">\r\n\r\n                                <label class=\"control-label col-sm-2\" > Email </label>\r\n                                <Field class=\"col-sm-2\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    title={values.email}\r\n                                    required={true}\r\n                                    autocomplete={true}\r\n                                />\r\n\r\n                            </div>\r\n                            <ErrorMessage component='div' name='email' className='alert alert-danger' />\r\n\r\n\r\n                            <div class=\"form-group\">\r\n                                <label class=\"control-label col-sm-2\">  Password </label>\r\n                                <Field class=\"col-sm-2\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    required={true}\r\n                                    autocomplete={true}\r\n                                />\r\n                            </div>\r\n                            <ErrorMessage component='div' name='password' className='alert alert alert-danger' />\r\n\r\n\r\n                            <div class=\"form-group\">\r\n                                <label class=\"control-label col-sm-2\"> Type </label>\r\n                                <Field class=\"col-sm-2\"\r\n                                    component=\"select\"\r\n                                    name=\"type\"\r\n                                    title={values.type}\r\n                                    required={true}\r\n                                    autocomplete={true}>\r\n                                    <option value=\"ADMIN\">Admin</option>\r\n                                    <option value=\"COMPANY\">Company</option>\r\n                                    <option value=\"CUSTOMER\">Customer</option>\r\n                                </Field>\r\n                            </div >\r\n                            <button type=\"submit\" class=\"btn btn-primary my-1\" disabled={!(isValid && dirty)} title=\"Login\">\r\n                                Login\r\n                        </button>\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik >\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}