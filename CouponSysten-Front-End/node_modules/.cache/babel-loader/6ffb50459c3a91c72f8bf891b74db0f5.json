{"ast":null,"code":"var _jsxFileName = \"/Users/eden_bachner/Full stack java/Final Project/\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D1spring/CouponSystemProject/src/App/Components/Users/Admin/AdminCustomers/AdminCustomers.js\",\n    _s = $RefreshSig$();\n\nimport './admin-customer.css';\nimport AdminCutomersSidebar from \"../AdminCustomers/AdminCustomersSidebar/AdminCustomersSidebar\";\nimport AutenticationService from \"../../../../../service/AutenticationService\";\nimport { useState, useEffect } from 'react';\nimport AdminService from \"../../../../../service/AdminService\";\nimport { Formik, Form } from 'formik';\nimport { Route, Switch } from 'react-router';\nimport addCustomer from \"./AddCustomer/AddCustomer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminCutomers() {\n  _s();\n\n  const [customer, setCustomers] = useState([{\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: ''\n  }]);\n  useEffect(() => {\n    AdminService.getAllCustomers().then(response => {\n      setCustomers(response.data);\n    }, error => {\n      try {\n        if (error.response.data.string) {\n          return;\n        }\n\n        if (error.response) {\n          alert(\"Login expired, please login again.\");\n          AutenticationService.logOut();\n        }\n      } catch {\n        alert(\"Servers are down, please try again later.\");\n        AutenticationService.logOut();\n      }\n    });\n  }, []);\n\n  const getCustomer = handleChange => {\n    if (customer[0].id === '') return;\n    return customer.map((interval, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AdminCustomers-td\",\n          title: \"checked\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"checkbox\",\n            name: \"checked\",\n            value: interval.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AdminCustomers-td\",\n          title: interval.id,\n          children: interval.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AdminCustomers-td\",\n          title: interval.firstName,\n          children: interval.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AdminCustomers-td\",\n          title: interval.lastName,\n          children: interval.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"AdminCustomers-td\",\n          title: interval.email,\n          children: interval.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  function addCustomer() {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/customers/add-customer\",\n        children: /*#__PURE__*/_jsxDEV(\"addCustomer\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/customers/update-customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/customers\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AdminCustomers\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              checked: []\n            },\n            children: ({\n              handleChange,\n              values,\n              handleReset\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(AdminCutomersSidebar, {\n                setCustomers: setCustomers,\n                values: values,\n                handleReset: handleReset\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table\",\n                id: \"CustomerCoupons-table\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      width: \"5%\",\n                      className: \"AdminCustomers-table-th\",\n                      title: \"(Checkbox)\",\n                      children: \"(Checkbox)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      width: \"10%\",\n                      className: \"AdminCustomers-table-th\",\n                      title: \"id\",\n                      children: \"Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      width: \"10%\",\n                      className: \"AdminCustomers-table-th\",\n                      title: \"First Name\",\n                      children: \"First Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      width: \"15%\",\n                      className: \"AdminCustomers-table-th\",\n                      title: \"Last Name\",\n                      children: \"Last Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      width: \"30%\",\n                      className: \"AdminCustomers-table-th\",\n                      title: \"Email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), getCustomer(handleChange)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: addCustomer\n  }, void 0, false);\n}\n\n_s(AdminCutomers, \"7nbM8XCcvdqDW4X0bo6RCfaQBAI=\");\n\n_c = AdminCutomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCutomers\");","map":{"version":3,"sources":["/Users/eden_bachner/Full stack java/Final Project/פרויקט גמר בspring/CouponSystemProject/src/App/Components/Users/Admin/AdminCustomers/AdminCustomers.js"],"names":["AdminCutomersSidebar","AutenticationService","useState","useEffect","AdminService","Formik","Form","Route","Switch","addCustomer","AdminCutomers","customer","setCustomers","id","firstName","lastName","email","getAllCustomers","then","response","data","error","string","alert","logOut","getCustomer","handleChange","map","interval","index","checked","values","handleReset"],"mappings":";;;AACA,OAAO,sBAAP;AACA,OAAOA,oBAAP,MAAiC,+DAAjC;AACA,OAAOC,oBAAP,MAAiC,6CAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEtC,QAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BV,QAAQ,CAAC,CAAC;AACzCW,IAAAA,EAAE,EAAE,EADqC;AAEzCC,IAAAA,SAAS,EAAE,EAF8B;AAGzCC,IAAAA,QAAQ,EAAE,EAH+B;AAIzCC,IAAAA,KAAK,EAAE;AAJkC,GAAD,CAAD,CAAzC;AASAb,EAAAA,SAAS,CAAC,MAAM;AAEdC,IAAAA,YAAY,CAACa,eAAb,GAA+BC,IAA/B,CACEC,QAAQ,IAAI;AACVP,MAAAA,YAAY,CAACO,QAAQ,CAACC,IAAV,CAAZ;AACD,KAHH,EAIGC,KAAD,IAAW;AACT,UAAI;AACF,YAAIA,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBE,MAAxB,EAAgC;AAC9B;AACD;;AACD,YAAID,KAAK,CAACF,QAAV,EAAoB;AAClBI,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACAtB,UAAAA,oBAAoB,CAACuB,MAArB;AACD;AACF,OARD,CAQE,MAAM;AACND,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACAtB,QAAAA,oBAAoB,CAACuB,MAArB;AACD;AACF,KAjBH;AAmBD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,QAAMC,WAAW,GAAIC,YAAD,IAAkB;AACpC,QAAIf,QAAQ,CAAC,CAAD,CAAR,CAAYE,EAAZ,KAAmB,EAAvB,EACE;AACF,WACEF,QAAQ,CAACgB,GAAT,CAAa,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChC,0BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAkC,UAAA,KAAK,EAAC,SAAxC;AAAA,iCAAkD;AAAO,YAAA,QAAQ,EAAEH,YAAjB;AAA+B,YAAA,IAAI,EAAC,UAApC;AAA+C,YAAA,IAAI,EAAC,SAApD;AAA8D,YAAA,KAAK,EAAEE,QAAQ,CAACf;AAA9E;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAkC,UAAA,KAAK,EAAEe,QAAQ,CAACf,EAAlD;AAAA,oBAAuDe,QAAQ,CAACf;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAkC,UAAA,KAAK,EAAEe,QAAQ,CAACd,SAAlD;AAAA,oBAA8Dc,QAAQ,CAACd;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAkC,UAAA,KAAK,EAAEc,QAAQ,CAACb,QAAlD;AAAA,oBAA6Da,QAAQ,CAACb;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAkC,UAAA,KAAK,EAAEa,QAAQ,CAACZ,KAAlD;AAAA,oBAA0DY,QAAQ,CAACZ;AAAnE;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAASa,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD,CADF;AAaD,GAhBD;;AAkBA,WAASpB,WAAT,GAAuB;AAErB,wBACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,+BAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,kBAAZ;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,aAAa,EAAE;AAAEqB,cAAAA,OAAO,EAAE;AAAX,aADjB;AAAA,sBAGG,CAAC;AAAEJ,cAAAA,YAAF;AAAgBK,cAAAA,MAAhB;AAAwBC,cAAAA;AAAxB,aAAD,kBACC,QAAC,IAAD;AAAA,sCAEE,QAAC,oBAAD;AAAsB,gBAAA,YAAY,EAAEpB,YAApC;AAAkD,gBAAA,MAAM,EAAEmB,MAA1D;AAAkE,gBAAA,WAAW,EAAEC;AAA/E;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAO,gBAAA,SAAS,EAAC,OAAjB;AAAyB,gBAAA,EAAE,EAAC,uBAA5B;AAAA,uCACE;AAAA,0CACE;AAAA,4CACE;AAAI,sBAAA,KAAK,EAAC,IAAV;AAAe,sBAAA,SAAS,EAAC,yBAAzB;AAAmD,sBAAA,KAAK,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAI,sBAAA,KAAK,EAAC,KAAV;AAAgB,sBAAA,SAAS,EAAC,yBAA1B;AAAoD,sBAAA,KAAK,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE;AAAI,sBAAA,KAAK,EAAC,KAAV;AAAgB,sBAAA,SAAS,EAAC,yBAA1B;AAAoD,sBAAA,KAAK,EAAC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAIE;AAAI,sBAAA,KAAK,EAAC,KAAV;AAAgB,sBAAA,SAAS,EAAC,yBAA1B;AAAoD,sBAAA,KAAK,EAAC,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,eAKE;AAAI,sBAAA,KAAK,EAAC,KAAV;AAAgB,sBAAA,SAAS,EAAC,yBAA1B;AAAoD,sBAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EASGP,WAAW,CAACC,YAAD,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD;;AACD,sBACE;AAAA,cACGjB;AADH,mBADF;AAKD;;GAlGuBC,a;;KAAAA,a","sourcesContent":["\nimport './admin-customer.css';\nimport AdminCutomersSidebar from \"../AdminCustomers/AdminCustomersSidebar/AdminCustomersSidebar\";\nimport AutenticationService from \"../../../../../service/AutenticationService\";\nimport { useState, useEffect } from 'react';\nimport AdminService from \"../../../../../service/AdminService\"\nimport { Formik, Form } from 'formik'\nimport { Route, Switch } from 'react-router';\nimport addCustomer from \"./AddCustomer/AddCustomer\";\n\n\nexport default function AdminCutomers() {\n\n  const [customer, setCustomers] = useState([{\n    id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n  }])\n\n\n\n  useEffect(() => {\n\n    AdminService.getAllCustomers().then(\n      response => {\n        setCustomers(response.data);\n      },\n      (error) => {\n        try {\n          if (error.response.data.string) {\n            return;\n          }\n          if (error.response) {\n            alert(\"Login expired, please login again.\");\n            AutenticationService.logOut();\n          }\n        } catch {\n          alert(\"Servers are down, please try again later.\");\n          AutenticationService.logOut();\n        }\n      }\n    )\n  }, [])\n\n  const getCustomer = (handleChange) => {\n    if (customer[0].id === '')\n      return\n    return (\n      customer.map((interval, index) => {\n        return (\n          <tr key={index}>\n            <td className=\"AdminCustomers-td\" title=\"checked\"><input onChange={handleChange} type=\"checkbox\" name=\"checked\" value={interval.id} /></td>\n            <td className=\"AdminCustomers-td\" title={interval.id}>{interval.id}</td>\n            <td className=\"AdminCustomers-td\" title={interval.firstName}>{interval.firstName}</td>\n            <td className=\"AdminCustomers-td\" title={interval.lastName}>{interval.lastName}</td>\n            <td className=\"AdminCustomers-td\" title={interval.email}>{interval.email}</td>\n          </tr>\n        )\n      })\n    )\n  }\n\n  function addCustomer() {\n\n    return (\n      <Switch>\n        <Route path=\"/admin/customers/add-customer\">\n          <addCustomer />\n        </Route>\n        <Route path=\"/admin/customers/update-customer\">\n          {/* <UpdateCompany /> */}\n        </Route>\n        <Route path=\"/admin/customers\">\n          <div className=\"AdminCustomers\">\n            <Formik\n              initialValues={{ checked: [] }}\n            >\n              {({ handleChange, values, handleReset }) => (\n                <Form >\n\n                  <AdminCutomersSidebar setCustomers={setCustomers} values={values} handleReset={handleReset} />\n                  <table className=\"table\" id=\"CustomerCoupons-table\">\n                    <tbody>\n                      <tr>\n                        <th width=\"5%\" className=\"AdminCustomers-table-th\" title=\"(Checkbox)\">(Checkbox)</th>\n                        <th width=\"10%\" className=\"AdminCustomers-table-th\" title=\"id\">Id</th>\n                        <th width=\"10%\" className=\"AdminCustomers-table-th\" title=\"First Name\">First Name</th>\n                        <th width=\"15%\" className=\"AdminCustomers-table-th\" title=\"Last Name\">Last Name</th>\n                        <th width=\"30%\" className=\"AdminCustomers-table-th\" title=\"Email\">Email</th>\n\n                      </tr>\n                      {getCustomer(handleChange)}\n                    </tbody>\n                  </table>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Route>\n      </Switch>\n\n    )\n  }\n  return (\n    <>\n      {addCustomer}\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}