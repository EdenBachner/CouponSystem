{"ast":null,"code":"var _jsxFileName = \"/Users/eden_bachner/Full stack java/Final Project/\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8 \\u05D2\\u05DE\\u05E8 \\u05D1spring/CouponSystemProject/src/App/Components/Sidebar/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavbarText, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.signOut = () => {\n      AuthenticationService.signOut();\n      this.props.history.push('/home');\n      window.location.reload();\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      showUser: false,\n      showPM: false,\n      showAdmin: false,\n      username: undefined,\n      login: false\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthenticationService.getCurrentUser();\n\n    if (user) {\n      const roles = [];\n      user.authorities.forEach(authority => {\n        roles.push(authority.authority);\n      });\n      this.setState({\n        showUser: true,\n        showPM: roles.includes(\"ROLE_PM\") || roles.includes(\"ROLE_ADMIN\"),\n        showAdmin: roles.includes(\"ROLE_ADMIN\"),\n        login: true,\n        username: user.username\n      });\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Navbar, {\n      color: \"dark\",\n      dark: true,\n      expand: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Sidebar);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/eden_bachner/Full stack java/Final Project/פרויקט גמר בspring/CouponSystemProject/src/App/Components/Sidebar/Sidebar.js"],"names":["React","Component","Collapse","Nav","Navbar","NavbarBrand","NavbarToggler","NavbarText","NavItem","NavLink","Link","withRouter","AuthenticationService","Sidebar","constructor","props","signOut","history","push","window","location","reload","state","isOpen","toggle","bind","showUser","showPM","showAdmin","username","undefined","login","componentDidMount","user","getCurrentUser","roles","authorities","forEach","authority","setState","includes","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,aAA7C,EAA4DC,UAA5D,EAAwEC,OAAxE,EAAiFC,OAAjF,QAAgG,YAAhG;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,qBAAP,MAAkC,mCAAlC;;;AAEA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAC9Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,OAlCmB,GAkCT,MAAM;AACdJ,MAAAA,qBAAqB,CAACI,OAAtB;AACA,WAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAtCkB;;AAEjB,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AAEA,SAAKH,KAAL,GAAa;AACXI,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,SAAS,EAAE,KAHA;AAIXC,MAAAA,QAAQ,EAAEC,SAJC;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAGrB,qBAAqB,CAACsB,cAAtB,EAAb;;AAEA,QAAID,IAAJ,EAAU;AACR,YAAME,KAAK,GAAG,EAAd;AAEAF,MAAAA,IAAI,CAACG,WAAL,CAAiBC,OAAjB,CAAyBC,SAAS,IAAI;AACpCH,QAAAA,KAAK,CAACjB,IAAN,CAAWoB,SAAS,CAACA,SAArB;AACD,OAFD;AAIA,WAAKC,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,MAAM,EAAEQ,KAAK,CAACK,QAAN,CAAe,SAAf,KAA6BL,KAAK,CAACK,QAAN,CAAe,YAAf,CAFzB;AAGZZ,QAAAA,SAAS,EAAEO,KAAK,CAACK,QAAN,CAAe,YAAf,CAHC;AAIZT,QAAAA,KAAK,EAAE,IAJK;AAKZF,QAAAA,QAAQ,EAAEI,IAAI,CAACJ;AALH,OAAd;AAOD;AACF;;AAQDL,EAAAA,MAAM,GAAG;AACP,SAAKe,QAAL,CAAc;AACZhB,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,KAAd;AAGD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,MAAM,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAnD6B;;AAsDhC,oBAAe9B,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavbarText, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport { withRouter } from 'react-router-dom';\n\nimport AuthenticationService from '../services/AuthenticationService';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {isOpen: false};\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      showUser: false,\n      showPM: false,\n      showAdmin: false,\n      username: undefined,\n      login: false\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthenticationService.getCurrentUser();\n\n    if (user) {\n      const roles = [];\n\n      user.authorities.forEach(authority => {\n        roles.push(authority.authority)\n      });\n  \n      this.setState({\n        showUser: true,\n        showPM: roles.includes(\"ROLE_PM\") || roles.includes(\"ROLE_ADMIN\"),\n        showAdmin: roles.includes(\"ROLE_ADMIN\"),\n        login: true,\n        username: user.username\n      });\n    }\n  }\n\n  signOut = () => {\n    AuthenticationService.signOut();\n    this.props.history.push('/home');\n    window.location.reload();\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return <Navbar color=\"dark\" dark expand=\"md\">\n    \n    </Navbar>;\n  }\n}\n\nexport default withRouter(Sidebar);"]},"metadata":{},"sourceType":"module"}